{"version":3,"sources":["angularApp.js"],"names":["app","angular","module","controller","$scope","posts","test","addPost","title","create","link","incrementUpvotes","post","upvote","addComment","body","_id","author","success","comment","comments","push","upvoteComment","factory","$http","o","upvotes","getAll","get","data","copy","id","then","res","put","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","resolve","postPromise","$stateParams","otherwise"],"mappings":"AAEA,GAAIA,KAAMC,QAAQC,OAAO,iBAAkB,aAE3CF,KAAIG,WAAW,YACX,SACA,QACA,SAASC,EAAQC,GACbD,EAAOE,KAAO,+BACdF,EAAOC,MAAQA,EAAMA,MACrBD,EAAOG,QAAU,WACRH,EAAOI,OAA0B,KAAjBJ,EAAOI,QAC5BH,EAAMI,QACFD,MAAOJ,EAAOI,MACdE,KAAMN,EAAOM,OAEjBN,EAAOI,MAAQ,GACfJ,EAAOM,KAAO,KAElBN,EAAOO,iBAAmB,SAASC,GAC/BP,EAAMQ,OAAOD,OAKzBZ,IAAIG,WAAW,aACX,SACA,QACA,OACA,SAASC,EAAQC,EAAOO,GACpBR,EAAOQ,KAAOA,EACdR,EAAOU,WAAa,WACG,KAAhBV,EAAOW,OAEVV,EAAMS,WAAWF,EAAKI,KAClBD,KAAMX,EAAOW,KACbE,OAAQ,SACTC,QAAQ,SAASC,GAChBf,EAAOQ,KAAKQ,SAASC,KAAKF,KAG9Bf,EAAOW,KAAO,KAElBX,EAAOO,iBAAmB,SAASQ,GAC/Bd,EAAMiB,cAAcV,EAAMO,OAKtCnB,IAAIuB,QAAQ,SAAU,QAAS,SAASC,GACpC,GAAIC,IACApB,QACKG,MAAO,SAAUkB,QAAS,EAAGN,cAC7BZ,MAAO,SAAUkB,QAAS,EAAGN,cAC7BZ,MAAO,SAAUkB,QAAS,GAAIN,cAC9BZ,MAAO,SAAUkB,QAAS,EAAGN,cAC7BZ,MAAO,SAAUkB,QAAS,EAAGN,cA0CtC,OAtCAK,GAAEE,OAAS,WACP,MAAOH,GAAMI,IAAI,UACZV,QAAQ,SAASW,GACd5B,QAAQ6B,KAAKD,EAAMJ,EAAEpB,UAIjCoB,EAAEG,IAAM,SAASG,GACb,MAAOP,GAAMI,IAAI,UAAYG,GAAIC,KAAK,SAASC,GAC3C,MAAOA,GAAIJ,QAInBJ,EAAEhB,OAAS,SAASG,GAChB,MAAOY,GAAMZ,KAAK,SAAUA,GACvBM,QAAQ,SAASW,GACdJ,EAAEpB,MAAMgB,KAAKQ,MAIzBJ,EAAEZ,OAAS,SAASD,GAChB,MAAOY,GAAMU,IAAI,UAAYtB,EAAKI,IAAM,WACnCE,QAAQ,SAASW,GACdjB,EAAKc,SAAW,KAI5BD,EAAEX,WAAa,SAASiB,EAAIZ,GACxB,MAAOK,GAAMZ,KAAK,UAAYmB,EAAK,YAAaZ,IAGpDM,EAAEH,cAAgB,SAASV,EAAMO,GAC7B,MAAOK,GAAMU,IAAI,UAAYtB,EAAKI,IAAM,aAAeG,EAAQH,IAAM,WAChEE,QAAQ,SAASW,GACdV,EAAQO,SAAW,KAIxBD,KAGXzB,IAAImC,QACA,iBACA,qBACA,SAASC,EAAgBC,GACrBD,EACKE,MAAM,QACHC,IAAK,QACLC,YAAa,aACbrC,WAAY,WACZsC,SACIC,aAAc,QAAS,SAASrC,GAC5B,MAAOA,GAAMsB,cAIxBW,MAAM,SACHC,IAAK,cACLC,YAAa,cACbrC,WAAY,YACZsC,SACI7B,MAAO,eAAgB,QAAS,SAAS+B,EAActC,GACnD,MAAOA,GAAMuB,IAAIe,EAAaZ,SAK9CM,EAAmBO,UAAU","file":"main.min.js","sourcesContent":["//TODO: modularize app.js\n\nvar app = angular.module('meanThinkster', ['ui.router']); // initialization needs a dependencies list -- must be omitted when just referencing\n\napp.controller(\"MainCtrl\", [\n    '$scope',\n    'posts',\n    function($scope, posts){\n        $scope.test = \"The Angular part is working!\";\n        $scope.posts = posts.posts;\n        $scope.addPost = function(){\n            if (!$scope.title || $scope.title === '') { return; }\n            posts.create({\n                title: $scope.title,\n                link: $scope.link\n            });\n            $scope.title = '';\n            $scope.link = '';\n        };\n        $scope.incrementUpvotes = function(post){\n            posts.upvote(post);\n        };\n    }\n]);\n\napp.controller('PostsCtrl', [\n    '$scope',\n    'posts',\n    'post',\n    function($scope, posts, post) {\n        $scope.post = post;\n        $scope.addComment = function(){\n            if($scope.body === '') { return; }\n\n            posts.addComment(post._id, {\n                body: $scope.body,\n                author: 'user'\n            }).success(function(comment) {\n                $scope.post.comments.push(comment);\n            });\n\n            $scope.body = '';\n        };\n        $scope.incrementUpvotes = function(comment){\n            posts.upvoteComment(post, comment);\n        };\n    }\n]);\n\napp.factory('posts', ['$http', function($http){\n    var o = {\n        posts: [\n            {title: 'post 1', upvotes: 5, comments: []},\n            {title: 'post 2', upvotes: 2, comments: []},\n            {title: 'post 3', upvotes: 15, comments: []},\n            {title: 'post 4', upvotes: 9, comments: []},\n            {title: 'post 5', upvotes: 4, comments: []}\n        ]\n    };\n\n    o.getAll = function() {\n        return $http.get('/posts')\n            .success(function(data) {\n                angular.copy(data, o.posts);\n            });\n    };\n\n    o.get = function(id) {\n        return $http.get('/posts/' + id).then(function(res) {\n            return res.data;\n        });\n    };\n\n    o.create = function(post) {\n        return $http.post('/posts', post)\n            .success(function(data) {\n                o.posts.push(data);\n            });\n    };\n\n    o.upvote = function(post) {\n        return $http.put('/posts/' + post._id + '/upvote')\n            .success(function(data) {\n                post.upvotes += 1;\n            });\n    };\n\n    o.addComment = function(id, comment) {\n        return $http.post('/posts/' + id + '/comments', comment);\n    };\n\n    o.upvoteComment = function(post, comment) {\n        return $http.put('/posts/' + post._id + '/comments/' + comment._id + '/upvote')\n            .success(function(data){\n                comment.upvotes += 1;\n            });\n    };\n\n    return o;\n}]);\n\napp.config([\n    '$stateProvider',\n    '$urlRouterProvider',\n    function($stateProvider, $urlRouterProvider){\n        $stateProvider\n            .state('home', {\n                url: '/home',\n                templateUrl: '/home.html',\n                controller: 'MainCtrl',\n                resolve: {\n                    postPromise: ['posts', function(posts){\n                        return posts.getAll();\n                    }]\n                }\n            })\n            .state('posts', {\n                url: '/posts/{id}',\n                templateUrl: '/posts.html',\n                controller: 'PostsCtrl',\n                resolve: {\n                    post: ['$stateParams', 'posts', function($stateParams, posts) {\n                        return posts.get($stateParams.id);\n                    }]\n                }\n            });\n\n        $urlRouterProvider.otherwise('home');\n    }\n]);"],"sourceRoot":"/source/"}