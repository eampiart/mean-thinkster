{"version":3,"sources":["angularApp.js"],"names":["app","angular","module","controller","$scope","posts","test","addPost","title","create","link","incrementUpvotes","post","upvote","$stateParams","id","addComment","body","comments","push","author","upvotes","comment","factory","$http","o","getAll","get","success","data","copy","put","_id","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","resolve","postPromise","otherwise"],"mappings":"AAEA,GAAIA,KAAMC,QAAQC,OAAO,iBAAkB,aAE3CF,KAAIG,WAAW,YACX,SACA,QACA,SAASC,EAAQC,GACbD,EAAOE,KAAO,+BACdF,EAAOC,MAAQA,EAAMA,MACrBD,EAAOG,QAAU,WACRH,EAAOI,OAA0B,KAAjBJ,EAAOI,QAC5BH,EAAMI,QACFD,MAAOJ,EAAOI,MACdE,KAAMN,EAAOM,OAEjBN,EAAOI,MAAQ,GACfJ,EAAOM,KAAO,KAElBN,EAAOO,iBAAmB,SAASC,GAC/BP,EAAMQ,OAAOD,OAKzBZ,IAAIG,WAAW,aACX,SACA,eACA,QACA,SAASC,EAAQU,EAAcT,GAC3BD,EAAOQ,KAAOP,EAAMA,MAAMS,EAAaC,IACvCX,EAAOY,WAAa,WACG,KAAhBZ,EAAOa,OACVb,EAAOQ,KAAKM,SAASC,MACjBF,KAAMb,EAAOa,KACbG,OAAQ,OACRC,QAAS,IAGbjB,EAAOa,KAAO,KAElBb,EAAOO,iBAAmB,SAASW,GAC/BA,EAAQD,cAKpBrB,IAAIuB,QAAQ,SAAU,QAAS,SAASC,GACpC,GAAIC,IACApB,QACKG,MAAO,SAAUa,QAAS,EAAGH,cAC7BV,MAAO,SAAUa,QAAS,EAAGH,cAC7BV,MAAO,SAAUa,QAAS,GAAIH,cAC9BV,MAAO,SAAUa,QAAS,EAAGH,cAC7BV,MAAO,SAAUa,QAAS,EAAGH,cAyBtC,OArBAO,GAAEC,OAAS,WACP,MAAOF,GAAMG,IAAI,UACZC,QAAQ,SAASC,GACd5B,QAAQ6B,KAAKD,EAAMJ,EAAEpB,UAIjCoB,EAAEhB,OAAS,SAASG,GAChB,MAAOY,GAAMZ,KAAK,SAAUA,GACvBgB,QAAQ,SAASC,GACdJ,EAAEpB,MAAMc,KAAKU,MAIzBJ,EAAEZ,OAAS,SAASD,GAChB,MAAOY,GAAMO,IAAI,UAAYnB,EAAKoB,IAAM,WACnCJ,QAAQ,SAASC,GACdjB,EAAKS,SAAW,KAIrBI,KAGXzB,IAAIiC,QACA,iBACA,qBACA,SAASC,EAAgBC,GACrBD,EACKE,MAAM,QACHC,IAAK,QACLC,YAAa,aACbnC,WAAY,WACZoC,SACIC,aAAc,QAAS,SAASnC,GAC5B,MAAOA,GAAMqB,cAIxBU,MAAM,SACHC,IAAK,cACLC,YAAa,cACbnC,WAAY,cAGpBgC,EAAmBM,UAAU","file":"main.min.js","sourcesContent":["//TODO: modularize app.js\n\nvar app = angular.module('meanThinkster', ['ui.router']); // initialization needs a dependencies list -- must be omitted when just referencing\n\napp.controller(\"MainCtrl\", [\n    '$scope',\n    'posts',\n    function($scope, posts){\n        $scope.test = \"The Angular part is working!\";\n        $scope.posts = posts.posts;\n        $scope.addPost = function(){\n            if (!$scope.title || $scope.title === '') { return; }\n            posts.create({\n                title: $scope.title,\n                link: $scope.link\n            });\n            $scope.title = '';\n            $scope.link = '';\n        };\n        $scope.incrementUpvotes = function(post){\n            posts.upvote(post);\n        };\n    }\n]);\n\napp.controller('PostsCtrl', [\n    '$scope',\n    '$stateParams',\n    'posts',\n    function($scope, $stateParams, posts) {\n        $scope.post = posts.posts[$stateParams.id];\n        $scope.addComment = function(){\n            if($scope.body === '') { return; }\n            $scope.post.comments.push({\n                body: $scope.body,\n                author: 'user',\n                upvotes: 0\n            });\n\n            $scope.body = '';\n        };\n        $scope.incrementUpvotes = function(comment){\n            comment.upvotes++;\n        };\n    }\n]);\n\napp.factory('posts', ['$http', function($http){\n    var o = {\n        posts: [\n            {title: 'post 1', upvotes: 5, comments: []},\n            {title: 'post 2', upvotes: 2, comments: []},\n            {title: 'post 3', upvotes: 15, comments: []},\n            {title: 'post 4', upvotes: 9, comments: []},\n            {title: 'post 5', upvotes: 4, comments: []}\n        ]\n    };\n\n    o.getAll = function() {\n        return $http.get('/posts')\n            .success(function(data) {\n                angular.copy(data, o.posts);\n            });\n    };\n\n    o.create = function(post) {\n        return $http.post('/posts', post)\n            .success(function(data) {\n                o.posts.push(data);\n            });\n    };\n\n    o.upvote = function(post) {\n        return $http.put('/posts/' + post._id + '/upvote')\n            .success(function(data) {\n                post.upvotes += 1;\n            });\n    };\n\n    return o;\n}]);\n\napp.config([\n    '$stateProvider',\n    '$urlRouterProvider',\n    function($stateProvider, $urlRouterProvider){\n        $stateProvider\n            .state('home', {\n                url: '/home',\n                templateUrl: '/home.html',\n                controller: 'MainCtrl',\n                resolve: {\n                    postPromise: ['posts', function(posts){\n                        return posts.getAll();\n                    }]\n                }\n            })\n            .state('posts', {\n                url: '/posts/{id}',\n                templateUrl: '/posts.html',\n                controller: 'PostsCtrl'\n            });\n\n        $urlRouterProvider.otherwise('home');\n    }\n]);"],"sourceRoot":"/source/"}